name: Linting

on: [pull_request]

jobs:

  k8slint:
    name: Kubernetes
    runs-on: ubuntu-latest
    steps:
    -
      uses: actions/checkout@v2
    -
      name: Set up Helm
      uses: azure/setup-helm@v1
    -
      name: Compile helm chart
      run: |
        mkdir compiled/
        helm template kubernetes/helm > compiled/all.yaml
    -
      uses: stackrox/kube-linter-action@v1
      with:
        directory: compiled/
        config: .github/kubelinter.yml

  golangci:
    name: Go
    runs-on: ubuntu-latest
    steps:
    -
      uses: actions/checkout@v2
    -
      name: golangci-lint
      uses: reviewdog/action-golangci-lint@master
      with:
        github_token: ${{ secrets.github_token }}
        golangci_lint_flags: "--config=.github/golangci.yml"

  codespell:
    name: Language
    runs-on: ubuntu-latest
    steps:
    -
      name: Check out code.
      uses: actions/checkout@v2
    -
      name: codespell
      uses: plettich/action-codespell@v0.3
      with:
        github_token: ${{ secrets.github_token }}

  yamllint:
    name: YAML
    runs-on: ubuntu-latest
    steps:
    -
      uses: actions/checkout@v2
    -
      name: Set up Helm
      uses: azure/setup-helm@v1
    -
      name: Compile helm chart
      run: |
        mkdir compiled/
        helm template kubernetes/helm > compiled/all.yaml
    -
      name: yamllint
      uses: reviewdog/action-yamllint@v1
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review
        yamllint_flags: 'compiled/'

  hadolint:
    name: Dockerfiles
    runs-on: ubuntu-latest
    steps:
    -
      name: Check out code.
      uses: actions/checkout@v2
    -
      name: hadolint
      uses: reviewdog/action-hadolint@v1
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review
        hadolint_flags: 'kubernetes/docker/'
